{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITWorx\\\\Reusable Component React V2\\\\src\\\\components\\\\DynamicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport FieldGenerator from './FieldGenerator';\nimport validationSchema from '../utils/validationSchema';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicForm = () => {\n  _s();\n  const {\n    control,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const [fields, setFields] = useState([]);\n  const addField = type => {\n    setFields(prev => [...prev, {\n      type,\n      id: Date.now()\n    }]);\n  };\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FieldGenerator, {\n      addField: addField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), fields.map(field => /*#__PURE__*/_jsxDEV(Controller, {\n      name: `field-${field.id}`,\n      control: control,\n      render: ({\n        field\n      }) => {\n        // Use a switch case or conditional rendering to choose the field type\n        switch (field.type) {\n          case 'text':\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              ...field,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 24\n            }, this);\n          case 'radio':\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"Option 1\",\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 23\n                }, this), \"Option 1\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"Option 2\",\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this), \"Option 2\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this);\n          case 'checkbox':\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), \"Check me\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this);\n          // Add cases for other field types here\n          default:\n            return null;\n        }\n      }\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicForm, \"PUWHzJUsVr56hEBOAu4cNj5R2Cs=\", false, function () {\n  return [useForm];\n});\n_c = DynamicForm;\nexport default DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["React","useState","useForm","Controller","FieldGenerator","validationSchema","yupResolver","jsxDEV","_jsxDEV","DynamicForm","_s","control","handleSubmit","resolver","fields","setFields","addField","type","prev","id","Date","now","onSubmit","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","field","name","render","value","_c","$RefreshReg$"],"sources":["D:/ITWorx/Reusable Component React V2/src/components/DynamicForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport FieldGenerator from './FieldGenerator';\r\nimport validationSchema from '../utils/validationSchema';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst DynamicForm = () => {\r\n  const { control, handleSubmit } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const [fields, setFields] = useState([]);\r\n\r\n  const addField = (type) => {\r\n    setFields((prev) => [...prev, { type, id: Date.now() }]);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <FieldGenerator addField={addField} />\r\n      {fields.map((field) => (\r\n        <Controller\r\n          key={field.id}\r\n          name={`field-${field.id}`}\r\n          control={control}\r\n          render={({ field }) => {\r\n            // Use a switch case or conditional rendering to choose the field type\r\n            switch (field.type) {\r\n              case 'text':\r\n                return <input {...field} type=\"text\" />;\r\n              case 'radio':\r\n                return (\r\n                  <div>\r\n                    <label>\r\n                      <input type=\"radio\" value=\"Option 1\" {...field} />\r\n                      Option 1\r\n                    </label>\r\n                    <label>\r\n                      <input type=\"radio\" value=\"Option 2\" {...field} />\r\n                      Option 2\r\n                    </label>\r\n                  </div>\r\n                );\r\n              case 'checkbox':\r\n                return (\r\n                  <label>\r\n                    <input type=\"checkbox\" {...field} />\r\n                    Check me\r\n                  </label>\r\n                );\r\n              // Add cases for other field types here\r\n              default:\r\n                return null;\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}