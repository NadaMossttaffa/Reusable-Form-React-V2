{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITWorx\\\\Reusable Component React V2\\\\src\\\\components\\\\DynamicForm.js\",\n  _s = $RefreshSig$();\n// src/components/DynamicForm.js\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  exampleText: yup.string().required('This field is required')\n});\nconst DynamicForm = () => {\n  _s();\n  const {\n    control,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [fields, setFields] = useState([]);\n  const addField = type => {\n    if (type) {\n      setFields(prevFields => [...prevFields, {\n        id: Date.now(),\n        type\n      }]);\n    }\n  };\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => addField(e.target.value),\n      defaultValue: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select Field Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"text\",\n        children: \"Text Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"checkbox\",\n        children: \"Checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"radio\",\n        children: \"Radio Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"file\",\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"field-label\",\n          children: [\"Field \", field.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: `field-${field.id}`,\n          render: ({\n            field: {\n              ref,\n              ...rest\n            }\n          }) => {\n            switch (field.type) {\n              case 'text':\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  ...rest,\n                  className: \"dynamic-input\",\n                  placeholder: \"Text Field\",\n                  ref: ref\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 28\n                }, this);\n              case 'checkbox':\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    ...rest,\n                    className: \"dynamic-checkbox\",\n                    ref: ref\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"field-label\",\n                    children: \"Checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this);\n              case 'radio':\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    ...rest,\n                    className: \"dynamic-radio\",\n                    ref: ref\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"field-label\",\n                    children: \"Radio Button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this);\n              case 'file':\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  ...rest,\n                  className: \"dynamic-file\",\n                  ref: ref\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 28\n                }, this);\n              default:\n                return null;\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicForm, \"PUWHzJUsVr56hEBOAu4cNj5R2Cs=\", false, function () {\n  return [useForm];\n});\n_c = DynamicForm;\nexport default DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["React","useState","useForm","Controller","yupResolver","yup","jsxDEV","_jsxDEV","schema","object","shape","exampleText","string","required","DynamicForm","_s","control","handleSubmit","resolver","fields","setFields","addField","type","prevFields","id","Date","now","onSubmit","data","console","log","className","children","onChange","e","target","value","defaultValue","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","field","name","render","ref","rest","placeholder","_c","$RefreshReg$"],"sources":["D:/ITWorx/Reusable Component React V2/src/components/DynamicForm.js"],"sourcesContent":["// src/components/DynamicForm.js\r\nimport React, { useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n  exampleText: yup.string().required('This field is required'),\r\n});\r\n\r\nconst DynamicForm = () => {\r\n  const { control, handleSubmit } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [fields, setFields] = useState([]);\r\n\r\n  const addField = (type) => {\r\n    if (type) {\r\n      setFields((prevFields) => [...prevFields, { id: Date.now(), type }]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <select onChange={(e) => addField(e.target.value)} defaultValue=\"\">\r\n        <option value=\"\" disabled>Select Field Type</option>\r\n        <option value=\"text\">Text Field</option>\r\n        <option value=\"checkbox\">Checkbox</option>\r\n        <option value=\"radio\">Radio Button</option>\r\n        <option value=\"file\">File Upload</option>\r\n        {/* Add more field types as needed */}\r\n      </select>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {fields.map((field) => (\r\n          <div className=\"field-container\" key={field.id}>\r\n            <label className=\"field-label\">Field {field.id}</label>\r\n            <Controller\r\n              control={control}\r\n              name={`field-${field.id}`}\r\n              render={({ field: { ref, ...rest } }) => {\r\n                switch (field.type) {\r\n                  case 'text':\r\n                    return <input {...rest} className=\"dynamic-input\" placeholder=\"Text Field\" ref={ref} />;\r\n                  case 'checkbox':\r\n                    return (\r\n                      <div>\r\n                        <input type=\"checkbox\" {...rest} className=\"dynamic-checkbox\" ref={ref} />\r\n                        <span className=\"field-label\">Checkbox</span>\r\n                      </div>\r\n                    );\r\n                  case 'radio':\r\n                    return (\r\n                      <div>\r\n                        <input type=\"radio\" {...rest} className=\"dynamic-radio\" ref={ref} />\r\n                        <span className=\"field-label\">Radio Button</span>\r\n                      </div>\r\n                    );\r\n                  case 'file':\r\n                    return <input type=\"file\" {...rest} className=\"dynamic-file\" ref={ref} />;\r\n                  default:\r\n                    return null;\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}